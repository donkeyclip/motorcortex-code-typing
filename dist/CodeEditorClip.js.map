{"version":3,"sources":["../src/CodeEditorClip.js"],"names":["MotorCortex","require","CodeEditorClip","flask","CodeFlask","context","getElements","language","lineNumbers","attrs","defaultTheme","darkTheme","readonly","readOnly","css1","document","getElementById","rootElement","appendChild","cloneNode","css2","setCustomEntity","textarea","toReturn","theme","API","DOMClip","module","exports"],"mappings":";;AACA;;;;;;;;;;;;;;;;;;;;;;AADA,IAAMA,WAAW,GAAGC,OAAO,CAAC,2BAAD,CAA3B;;IAGMC,c;;;;;;;;;;;;;oCAwBc;AACZ,UAAMC,KAAK,GAAG,IAAIC,qBAAJ,CAAc,KAAKC,OAAL,CAAaC,WAAb,CAAyB,cAAzB,EAAyC,CAAzC,CAAd,EAA2D;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WAAX,KAA2B,IAA1D;AAAgEE,QAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWE,SAAX,KAAyB,IAAvG;AAA6GC,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,QAAX,KAAwB;AAA/I,OAA3D,CAAd;AAEA,UAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAb;AACA,WAAKX,OAAL,CAAaY,WAAb,CAAyBC,WAAzB,CAAqCJ,IAAI,CAACK,SAAL,CAAe,IAAf,CAArC;;AACA,UAAI,KAAKV,KAAL,CAAWE,SAAX,KAAyB,IAA7B,EAAmC;AAC/B,YAAMS,IAAI,GAAGL,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAb;AACA,aAAKX,OAAL,CAAaY,WAAb,CAAyBC,WAAzB,CAAqCE,IAAI,CAACD,SAAL,CAAe,IAAf,CAArC;AACH;;AAED,WAAKE,eAAL,CAAqB,QAArB,EAA+B;AAAElB,QAAAA,KAAK,EAAEA,KAAT;AAAgBmB,QAAAA,QAAQ,EAAE,KAAKjB,OAAL,CAAaC,WAAb,CAAyB,+BAAzB,EAA0D,CAA1D;AAA1B,OAA/B;AACH;;;wBAlCU;AACP;AAGH;;;wBAES;AACN,UAAIiB,QAAQ,sHAAZ;;AAMA,UAAI,KAAKd,KAAL,CAAWE,SAAX,KAAyB,IAA7B,EAAmC;AAC/B,YAAMa,KAAK,GAAGvB,OAAO,iBAArB;;AACAsB,QAAAA,QAAQ,gCACFC,KADE,+BAAR;AAGH;;AAED,aAAOD,QAAP;AACH;;;;EAtBwBvB,WAAW,CAACyB,GAAZ,CAAgBC,O;;AAsC7CC,MAAM,CAACC,OAAP,GAAiB1B,cAAjB","sourcesContent":["const MotorCortex = require(\"@kissmybutton/motorcortex\");\nimport CodeFlask from 'codeflask';\n\nclass CodeEditorClip extends MotorCortex.API.DOMClip {\n    get html() {\n        return `\n            <div id=\"code-editor\"></div>\n        `\n    }\n\n    get css() {\n        let toReturn = `\n            #code-editor{\n                width: 100%;\n                height: 100%;\n            }\n        `;\n        if (this.attrs.darkTheme === true) {\n            const theme = require(`./themes/dark`);\n            toReturn += `\n                ${theme}            \n            `;\n        }\n\n        return toReturn;\n    }\n\n    onAfterRender() {\n        const flask = new CodeFlask(this.context.getElements('#code-editor')[0], { language: 'js', lineNumbers: this.attrs.lineNumbers === true, defaultTheme: this.attrs.darkTheme !== true, readonly: this.attrs.readOnly === true });\n\n        const css1 = document.getElementById('codeflask-style');\n        this.context.rootElement.appendChild(css1.cloneNode(true));\n        if (this.attrs.darkTheme !== true) {\n            const css2 = document.getElementById('theme-default');\n            this.context.rootElement.appendChild(css2.cloneNode(true));\n        }\n\n        this.setCustomEntity(\"editor\", { flask: flask, textarea: this.context.getElements('#code-editor > div > textarea')[0] });\n    }\n}\n\nmodule.exports = CodeEditorClip;\n"],"file":"CodeEditorClip.js"}